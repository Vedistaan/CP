const int N =  1e6;
unsigned int isPrime[N + 5];
void sieve() {
    memset(isPrime, -1, sizeof(isPrime));

    for(unsigned i = 3; i * i <= N; i += 2 )
        if(isPrime[i >> 6] & (1 << ((i >> 1) & 31)))
            for(unsigned j = i * i; j < N; j += (i + i))
                isPrime[j >> 6] &= ~(1 << ((j >> 1) & 31));
}
bool checkPrime (int x) {
    if(x == 1) return 0;
    else if(x == 2) return 1;
    return (x & 1) && (isPrime[x >> 6] & (1 << ((x >> 1) & 31)));
}
